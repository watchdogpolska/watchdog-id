openapi: 3.0.0
info:
  title: Watchdog-ID
  version: 1.0.0
paths:
  /v1/user:
    get:
      responses:
        '200':
          description: an array of users objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: a users objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
  /v1/user/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      responses:
        '200':
          description: a user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
    patch:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: a user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

    delete:
      responses:
        '200':
          description: a user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

  /v1/access_request:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accessRequest'
      responses:
        '200':
          description: an array of users objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessRequest'
    get:
      parameters:
        - name: status
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/opinionStatus'
        - name: opinionUserId
          in: query
          required: false
          schema:
            type: integer
        - name: accessUserId
          in: query
          required: false
          schema:
            type: integer
        - name: roleId
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: access request by opinionStatus or opinionUser or accessUser
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accessRequest'
  /v1/access_request/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      responses:
        '200':
          description: The access request
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/accessRequest'
    delete:
      responses:
        '200':
          description: The access request
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/opinion'
  /v1/access_request/{id}/opinion:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      responses:
        '200':
          description: The opinion about access request
          content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/opinion'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opinion'
      responses:
        '200':
          description: The opinion about access request
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/opinion'
  /v1/access_request/{id}/user:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      responses:
        '200':
          description: The users of access request
          content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/user'
  /v1/access_request/{id}/role:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      responses:
        '200':
          description: The roles of access request
          content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/role'
  /v1/access_request/{id}/opinion/{opinion_id}:
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: opinion_id
          in: path
          required: true
          schema:
            type: integer
    get:
      responses:
        '200':
          description: The opinion about access request
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/opinion'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opinion'
      responses:
        '200':
          description: The opinion about access request
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/opinion'
  /v1/service/:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      responses:
        '200':
          description: an array of services
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/service'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service'
      responses:
        '200':
          description: The services
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/service'
    delete:
      responses:
        '200':
          description: The services
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/service'
  /v1/service/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      responses:
        '200':
          description: The opinion about access request
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/opinion'
    patch:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opinion'
      responses:
        '200':
          description: The opinion about access request
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/opinion'
  /v1/service/{id}/role/{opinion_id}:
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: opinion_id
          in: path
          required: true
          schema:
            type: integer
    get:
      responses:
        '200':
          description: The opinion about access request
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/opinion'
    patch:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opinion'
      responses:
        '200':
          description: The opinion about access request
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/opinion'
components:
  schemas:
    opinionStatus:
      type: string
      enum:
        - accepted
        - rejected
        - pending
    userStatus:
      type: string
      enum:
        - pending
        - accepted
        - admin
        - suspended
    roleStatus:
      type: string
      enum:
        - pending
        - active
        - suspended
        - archived
    serviceStatus:
      type: string
      enum:
        - pending
        - active
        - suspended
        - archived
    eventType:
      type: string
      enum:
        - created
        - accepted
        - rejected
        - queued
        - done
        - error
    accessRequestStatus:
      type: string
      enum:
        - pending
        - rejected
        - accepted
        - queued
        - done
        - error
    user:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        first_name:
          type: string
        second_name:
          type: string
        email:
          type: string
        password:
          type: string
          writeOnly: true
        status:
          $ref: '#/components/schemas/userStatus'
        active:
          description: If status == active
          type: boolean
          readOnly: true
    accessRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comment:
          type: string
        opinions:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/opinion'
        events:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/events'
        status:
          $ref: '#/components/schemas/accessRequestStatus'
        usersId:
          type: array
          items:
            type: string
        rolesId:
          type: array
          items:
            type: string
        createdBy:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        modifiedBy:
          type: string
          readOnly: true
        modifiedAt:
          type: string
          readOnly: true
    events:
      type: object

      properties:
        id:
          type: integer
          readOnly: true
        accessRequestId:
          type: integer
        type:
          $ref: '#/components/schemas/eventType'
        createdAt:
          type: string
          readOnly: true
        data:
          type:  object
          additionalProperties:
            type: string
    opinion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        userId:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/opinionStatus'
        comment:
          type: string
    service:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        description:
          type: string
        endpointUrl:
          type: string
        features:
          type: object
          properties:
            passwordReset:
              type: boolean
            userProvidedUsername:
              type: boolean
        status:
          $ref: '#/components/schemas/serviceStatus'
        active:
          description: If status == active
          type: boolean
          readOnly: true
        createdBy:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        modifiedBy:
          type: string
          readOnly: true
        modifiedAt:
          type: string
          readOnly: true
    role:
      type: object
      properties:
        id:
          type: integer
        status:
          $ref: '#/components/schemas/roleStatus'
        serviceId:
          type: integer
        name:
          type: string
        description:
          type: string
        active:
          description: If status == active
          type: boolean
        manager:
          type: string
        createdBy:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        modifiedBy:
          type: string
          readOnly: true
        modifiedAt:
          type: string
          readOnly: true
